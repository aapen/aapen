@startuml

state StartSynchronousTransfer
state StartAsynchronousTransfer
state ChannelAllocated
state StartChannel
state AwaitChannelDisable
state AwaitTransactionComplete

[*] -d-> StartSynchronousTransfer
[*] -r-> StartAsynchronousTransfer

StartAsynchronousTransfer -d-> SignalAllocated : [signal available] allocate signal
StartAsynchronousTransfer -r-> TransferFailed: [no signal available]

SignalAllocated -l-> StartSynchronousTransfer

StartSynchronousTransfer -d-> ChannelAllocated : [channel available] allocate channel
StartSynchronousTransfer -r-> TransferFailed: [no channel available]

ChannelAllocated : channel assigned

ChannelAllocated --> StartChannel : [channel inactive]
ChannelAllocated --> AwaitChannelDisable : [channel active] disable channel

AwaitChannelDisable -l-> StartChannel : [halted interrupt]
AwaitChannelDisable -> TransferFailed_withChannel : [timeout] / release channel
AwaitChannelDisable : channel assigned

StartChannel: channel assigned
TransferFailed_withChannel: channel assigned

StartChannel -d-> AwaitTransactionComplete : set HCD registers
AwaitTransactionComplete : channel assigned

AwaitTransactionComplete -l-> WhatDo : [halted interrupt]
AwaitTransactionComplete -> TransferFailed_withChannel : [timeout]
AwaitTransactionComplete -d-> SynchronousTransferCompleted : [transfer complete interrupt && was synchronous]
AwaitTransactionComplete -d-> AsyncTransferCompleted : [transfer complete interrupt && was asynchronous]

AsyncTransferCompleted -d-> [*] : release channel, raise signal
WhatDo : channel assigned

TransferFailed_withChannel -> TransferFailed : release channel
SynchronousTransferCompleted -d-> [*] : release channel
TransferFailed -> [*] : report error

@enduml
